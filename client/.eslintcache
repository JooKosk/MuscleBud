[{"/home/joonas/projects/MuscleBud/client/src/index.js":"1","/home/joonas/projects/MuscleBud/client/src/App.js":"2","/home/joonas/projects/MuscleBud/client/src/components/RoutineForm.js":"3","/home/joonas/projects/MuscleBud/client/src/components/PlanInfo.js":"4","/home/joonas/projects/MuscleBud/client/src/components/Navbar.js":"5","/home/joonas/projects/MuscleBud/client/src/components/Plans.js":"6","/home/joonas/projects/MuscleBud/client/src/components/Home.js":"7","/home/joonas/projects/MuscleBud/client/src/services/plans.js":"8","/home/joonas/projects/MuscleBud/client/src/services/workouts.js":"9","/home/joonas/projects/MuscleBud/client/src/services/login.js":"10","/home/joonas/projects/MuscleBud/client/src/components/LoginForm.js":"11","/home/joonas/projects/MuscleBud/client/src/components/Togglable.js":"12","/home/joonas/projects/MuscleBud/client/src/components/RegisterForm.js":"13","/home/joonas/projects/MuscleBud/client/src/services/register.js":"14","/home/joonas/projects/MuscleBud/client/src/components/styling.js":"15","/home/joonas/projects/MuscleBud/client/src/components/Footer.js":"16","/home/joonas/projects/MuscleBud/client/src/components/WorkoutForm.js":"17"},{"size":142,"mtime":1607603622532,"results":"18","hashOfConfig":"19"},{"size":2340,"mtime":1608050406101,"results":"20","hashOfConfig":"19"},{"size":2096,"mtime":1607605604656,"results":"21","hashOfConfig":"19"},{"size":1256,"mtime":1606568243735,"results":"22","hashOfConfig":"19"},{"size":1205,"mtime":1608043151337,"results":"23","hashOfConfig":"19"},{"size":1371,"mtime":1607537180868,"results":"24","hashOfConfig":"19"},{"size":2044,"mtime":1608053597929,"results":"25","hashOfConfig":"19"},{"size":525,"mtime":1607526375481,"results":"26","hashOfConfig":"19"},{"size":541,"mtime":1608050433025,"results":"27","hashOfConfig":"19"},{"size":264,"mtime":1607081345119,"results":"28","hashOfConfig":"19"},{"size":2088,"mtime":1607768570514,"results":"29","hashOfConfig":"19"},{"size":624,"mtime":1607866256798,"results":"30","hashOfConfig":"19"},{"size":2750,"mtime":1607604592824,"results":"31","hashOfConfig":"19"},{"size":207,"mtime":1607081336719,"results":"32","hashOfConfig":"19"},{"size":6201,"mtime":1608053856553,"results":"33","hashOfConfig":"19"},{"size":250,"mtime":1608044213005,"results":"34","hashOfConfig":"19"},{"size":4525,"mtime":1608052706057,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1jys68p",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/joonas/projects/MuscleBud/client/src/index.js",[],["75","76"],"/home/joonas/projects/MuscleBud/client/src/App.js",[],"/home/joonas/projects/MuscleBud/client/src/components/RoutineForm.js",[],"/home/joonas/projects/MuscleBud/client/src/components/PlanInfo.js",[],"/home/joonas/projects/MuscleBud/client/src/components/Navbar.js",[],"/home/joonas/projects/MuscleBud/client/src/components/Plans.js",["77"],"import React from 'react'\nimport {\n  Table,\n  TableHead,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableRow,\n  Paper,\n} from '@material-ui/core'\nimport { Link } from 'react-router-dom'\nimport { CenteredContainer } from './styling'\n\nconst Plans = ({ plans }) => {\n  return (\n    <div>\n      <h2>Plans</h2>\n      <TableContainer component={Paper}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell align=\"left\">\n                <strong>Plan name</strong>\n              </TableCell>\n              <TableCell>\n                <strong>Author</strong>\n              </TableCell>\n              <TableCell>\n                <strong>Workout type</strong>\n              </TableCell>\n              <TableCell>\n                <strong>Days / week</strong>\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {plans.map((p) => (\n              <TableRow key={p.id}>\n                <TableCell>\n                  <Link to={`/plans/${p.id}`}>{p.name}</Link>\n                </TableCell>\n                <TableCell>{p.author}</TableCell>\n                <TableCell>{p.workoutType}</TableCell>\n                <TableCell>{p.workoutDays}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  )\n}\n\nexport default Plans\n","/home/joonas/projects/MuscleBud/client/src/components/Home.js",[],"/home/joonas/projects/MuscleBud/client/src/services/plans.js",[],"/home/joonas/projects/MuscleBud/client/src/services/workouts.js",[],"/home/joonas/projects/MuscleBud/client/src/services/login.js",[],"/home/joonas/projects/MuscleBud/client/src/components/LoginForm.js",["78"],"import React, { useState } from 'react'\nimport { login } from '../services/login'\nimport { Formik } from 'formik'\nimport * as yup from 'yup'\nimport { Link } from 'react-router-dom'\nimport {\n  LoginTextField,\n  FormWrapper,\n  CenteredForm,\n  LoginButton,\n} from './styling'\nconst validationSchema = yup.object({\n  username: yup.string().required().min(3),\n  password: yup.string().required(),\n})\n\nconst LoginForm = ({ setUser }) => {\n  const [message, setMessage] = useState(null)\n  const handleLogin = async ({ username, password }) => {\n    try {\n      const user = await login({\n        username,\n        password,\n      })\n      window.localStorage.setItem('User', JSON.stringify(user))\n      setUser(user)\n    } catch (e) {\n      setMessage('Wrong username or password')\n      setTimeout(() => {\n        setMessage(null)\n      }, 5000)\n    }\n  }\n\n  return (\n    <FormWrapper>\n      <h1>Sign in to MuscleBud</h1>\n      <Formik\n        initialValues={{ username: '', password: '' }}\n        onSubmit={(values, { setSubmitting }) => {\n          console.log('submitting', values)\n          handleLogin(values)\n          setSubmitting(false)\n        }}\n        validationSchema={validationSchema}\n      >\n        {(props) => {\n          const { isSubmitting, handleSubmit } = props\n          return (\n            <CenteredForm onSubmit={handleSubmit}>\n              <LoginTextField label=\"Username\" name=\"username\" type=\"text\" />\n              <LoginTextField\n                label=\"Password\"\n                name=\"password\"\n                type=\"password\"\n              />\n              <LoginButton disabled={isSubmitting} type=\"submit\">\n                Log in\n              </LoginButton>\n              <p>\n                Not yet registered?{' '}\n                <Link\n                  style={{ textDecoration: 'none', color: 'blue' }}\n                  to=\"/register\"\n                >\n                  Create an account.\n                </Link>\n              </p>\n            </CenteredForm>\n          )\n        }}\n      </Formik>\n    </FormWrapper>\n  )\n}\nexport default LoginForm\n","/home/joonas/projects/MuscleBud/client/src/components/Togglable.js",[],"/home/joonas/projects/MuscleBud/client/src/components/RegisterForm.js",["79","80","81"],"import React, { useState } from 'react'\nimport { register } from '../services/register'\nimport { Formik, Form } from 'formik'\nimport * as yup from 'yup'\nimport { useHistory } from 'react-router-dom'\nimport { MyTextField, FormWrapper, CenteredForm, LoginButton } from './styling'\n\nconst validationSchema = yup.object({\n  name: yup\n    .string()\n    .required('First name is required')\n    .min(2, 'Must be at least 2 characters long'),\n  username: yup.string().required('Username is required').min(3),\n  password: yup\n    .string()\n    .required('Password is required')\n    .min(4, 'Password must have more than 4 characters'),\n  confirmPassword: yup\n    .string()\n    .oneOf([yup.ref('password')], \"Passwords don't match\")\n    .required('Confirm password'),\n})\n\nconst RegisterForm = () => {\n  let [alertMessage, setAlertMessage] = useState(null)\n  let [alertStatus, setAlertStatus] = useState('success')\n  let history = useHistory()\n  const handleRegistration = async ({ name, username, password }) => {\n    try {\n      const res = await register({\n        name,\n        username,\n        password,\n      })\n      if (res) {\n        setAlertStatus('success')\n        setAlertMessage('Registration succesful! You are being redirected..')\n        setTimeout(() => {\n          setAlertMessage(null)\n          history.push('/')\n        }, 6000)\n      }\n    } catch (e) {\n      setAlertStatus('error')\n      setAlertMessage('That username is already taken..')\n      setTimeout(() => {\n        setAlertMessage(null)\n      }, 6000)\n    }\n  }\n  return (\n    <FormWrapper>\n      <h1>Create your Musclebud account</h1>\n      <Formik\n        initialValues={{\n          name: '',\n          username: '',\n          password: '',\n          confirmPassword: '',\n        }}\n        onSubmit={(values, { setSubmitting, resetForm }) => {\n          handleRegistration(values)\n          resetForm()\n          setSubmitting(false)\n        }}\n        validationSchema={validationSchema}\n      >\n        {(props) => {\n          const { isSubmitting, handleSubmit } = props\n          return (\n            <CenteredForm onSubmit={handleSubmit}>\n              <MyTextField label=\"First name\" name=\"name\" type=\"text\" />\n              <MyTextField label=\"Username\" name=\"username\" type=\"text\" />\n              <MyTextField label=\"Password\" name=\"password\" type=\"password\" />\n              <MyTextField\n                label=\"Confirm password\"\n                name=\"confirmPassword\"\n                type=\"password\"\n              />\n              <LoginButton disabled={isSubmitting} type=\"submit\">\n                Create Account\n              </LoginButton>\n            </CenteredForm>\n          )\n        }}\n      </Formik>\n    </FormWrapper>\n  )\n}\n\nexport default RegisterForm\n","/home/joonas/projects/MuscleBud/client/src/services/register.js",["82"],"import axios from 'axios'\nconst baseUrl = '/api/users'\n\nexport const register = async (credentials) => {\n  const res = await axios.post(baseUrl, credentials)\n  return res.data\n}\n\nexport default { register }\n","/home/joonas/projects/MuscleBud/client/src/components/styling.js",[],"/home/joonas/projects/MuscleBud/client/src/components/Footer.js",[],"/home/joonas/projects/MuscleBud/client/src/components/WorkoutForm.js",["83","84"],{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":12,"column":10,"nodeType":"91","messageId":"92","endLine":12,"endColumn":27},{"ruleId":"89","severity":1,"message":"93","line":18,"column":10,"nodeType":"91","messageId":"92","endLine":18,"endColumn":17},{"ruleId":"89","severity":1,"message":"94","line":3,"column":18,"nodeType":"91","messageId":"92","endLine":3,"endColumn":22},{"ruleId":"89","severity":1,"message":"95","line":25,"column":8,"nodeType":"91","messageId":"92","endLine":25,"endColumn":20},{"ruleId":"89","severity":1,"message":"96","line":26,"column":8,"nodeType":"91","messageId":"92","endLine":26,"endColumn":19},{"ruleId":"97","severity":1,"message":"98","line":9,"column":1,"nodeType":"99","endLine":9,"endColumn":28},{"ruleId":"100","severity":1,"message":"101","line":38,"column":19,"nodeType":"102","messageId":"103","endLine":38,"endColumn":20},{"ruleId":"100","severity":1,"message":"101","line":38,"column":38,"nodeType":"102","messageId":"103","endLine":38,"endColumn":39},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"no-unused-vars","'CenteredContainer' is defined but never used.","Identifier","unusedVar","'message' is assigned a value but never used.","'Form' is defined but never used.","'alertMessage' is assigned a value but never used.","'alertStatus' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-global-assign","no-unsafe-negation"]