[{"/home/joonas/projects/MuscleBud/client/src/index.js":"1","/home/joonas/projects/MuscleBud/client/src/App.js":"2","/home/joonas/projects/MuscleBud/client/src/components/RoutineForm.js":"3","/home/joonas/projects/MuscleBud/client/src/components/PlanInfo.js":"4","/home/joonas/projects/MuscleBud/client/src/components/Navbar.js":"5","/home/joonas/projects/MuscleBud/client/src/components/Plans.js":"6","/home/joonas/projects/MuscleBud/client/src/components/Home.js":"7","/home/joonas/projects/MuscleBud/client/src/services/plans.js":"8","/home/joonas/projects/MuscleBud/client/src/services/workouts.js":"9","/home/joonas/projects/MuscleBud/client/src/services/login.js":"10","/home/joonas/projects/MuscleBud/client/src/components/LoginForm.js":"11","/home/joonas/projects/MuscleBud/client/src/components/Togglable.js":"12","/home/joonas/projects/MuscleBud/client/src/components/RegisterForm.js":"13","/home/joonas/projects/MuscleBud/client/src/services/register.js":"14","/home/joonas/projects/MuscleBud/client/src/components/Footer.js":"15","/home/joonas/projects/MuscleBud/client/src/components/WorkoutForm.js":"16","/home/joonas/projects/MuscleBud/client/src/components/Alert.js":"17","/home/joonas/projects/MuscleBud/client/src/components/Workout.js":"18","/home/joonas/projects/MuscleBud/client/src/styling/global.js":"19","/home/joonas/projects/MuscleBud/client/src/styling/wrappers.js":"20","/home/joonas/projects/MuscleBud/client/src/styling/mixins.js":"21","/home/joonas/projects/MuscleBud/client/src/styling/forms.js":"22"},{"size":142,"mtime":1607603622532,"results":"23","hashOfConfig":"24"},{"size":2699,"mtime":1608293300127,"results":"25","hashOfConfig":"24"},{"size":2138,"mtime":1608282522887,"results":"26","hashOfConfig":"24"},{"size":1256,"mtime":1606568243735,"results":"27","hashOfConfig":"24"},{"size":1246,"mtime":1608282333919,"results":"28","hashOfConfig":"24"},{"size":1381,"mtime":1608282920155,"results":"29","hashOfConfig":"24"},{"size":1112,"mtime":1608291546223,"results":"30","hashOfConfig":"24"},{"size":525,"mtime":1607526375481,"results":"31","hashOfConfig":"24"},{"size":1200,"mtime":1608286763815,"results":"32","hashOfConfig":"24"},{"size":264,"mtime":1607081345119,"results":"33","hashOfConfig":"24"},{"size":2280,"mtime":1608287476715,"results":"34","hashOfConfig":"24"},{"size":678,"mtime":1608282537059,"results":"35","hashOfConfig":"24"},{"size":2921,"mtime":1608293226031,"results":"36","hashOfConfig":"24"},{"size":207,"mtime":1607081336719,"results":"37","hashOfConfig":"24"},{"size":364,"mtime":1608294291151,"results":"38","hashOfConfig":"24"},{"size":4696,"mtime":1608285099035,"results":"39","hashOfConfig":"24"},{"size":337,"mtime":1608281977063,"results":"40","hashOfConfig":"24"},{"size":3409,"mtime":1608291118911,"results":"41","hashOfConfig":"24"},{"size":265,"mtime":1608282100923,"results":"42","hashOfConfig":"24"},{"size":2688,"mtime":1608294337003,"results":"43","hashOfConfig":"24"},{"size":2456,"mtime":1608291044139,"results":"44","hashOfConfig":"24"},{"size":3149,"mtime":1608293941579,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1jys68p",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"/home/joonas/projects/MuscleBud/client/src/index.js",[],["95","96"],"/home/joonas/projects/MuscleBud/client/src/App.js",[],"/home/joonas/projects/MuscleBud/client/src/components/RoutineForm.js",[],"/home/joonas/projects/MuscleBud/client/src/components/PlanInfo.js",[],"/home/joonas/projects/MuscleBud/client/src/components/Navbar.js",[],"/home/joonas/projects/MuscleBud/client/src/components/Plans.js",["97"],"import React from 'react'\nimport {\n  Table,\n  TableHead,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableRow,\n  Paper,\n} from '@material-ui/core'\nimport { Link } from 'react-router-dom'\nimport { CenteredContainer } from '../styling/wrappers'\n\nconst Plans = ({ plans }) => {\n  return (\n    <div>\n      <h2>Plans</h2>\n      <TableContainer component={Paper}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell align=\"left\">\n                <strong>Plan name</strong>\n              </TableCell>\n              <TableCell>\n                <strong>Author</strong>\n              </TableCell>\n              <TableCell>\n                <strong>Workout type</strong>\n              </TableCell>\n              <TableCell>\n                <strong>Days / week</strong>\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {plans.map((p) => (\n              <TableRow key={p.id}>\n                <TableCell>\n                  <Link to={`/plans/${p.id}`}>{p.name}</Link>\n                </TableCell>\n                <TableCell>{p.author}</TableCell>\n                <TableCell>{p.workoutType}</TableCell>\n                <TableCell>{p.workoutDays}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  )\n}\n\nexport default Plans\n","/home/joonas/projects/MuscleBud/client/src/components/Home.js",[],"/home/joonas/projects/MuscleBud/client/src/services/plans.js",[],"/home/joonas/projects/MuscleBud/client/src/services/workouts.js",[],"/home/joonas/projects/MuscleBud/client/src/services/login.js",[],"/home/joonas/projects/MuscleBud/client/src/components/LoginForm.js",[],"/home/joonas/projects/MuscleBud/client/src/components/Togglable.js",[],"/home/joonas/projects/MuscleBud/client/src/components/RegisterForm.js",[],"/home/joonas/projects/MuscleBud/client/src/services/register.js",["98"],"import axios from 'axios'\nconst baseUrl = '/api/users'\n\nexport const register = async (credentials) => {\n  const res = await axios.post(baseUrl, credentials)\n  return res.data\n}\n\nexport default { register }\n","/home/joonas/projects/MuscleBud/client/src/components/Footer.js",[],"/home/joonas/projects/MuscleBud/client/src/components/WorkoutForm.js",["99","100"],"import React from 'react'\nimport {\n  FormWrapper,\n  CenteredForm,\n  MyTextField,\n  MyBigTextField,\n  MyDateField,\n  MySelect,\n} from '../styling/forms'\nimport { LoginButton } from '../styling/mixins'\nimport { create } from '../services/workouts'\nimport { Formik } from 'formik'\nimport * as yup from 'yup'\n\nconst validationSchema = yup.object({\n  workoutName: yup.string().required('Workout name is required'),\n  workoutType: yup.string().required('Workout type is required'),\n  startTime: yup.date().required('Start time is required'),\n  endTime: yup.date().required('End time is required'),\n  description: yup.string().max(140),\n})\n\nconst workoutTimeToString = (endTime, startTime) => {\n  let difference = Math.abs(endTime - startTime)\n\n  let ms = difference % 1000\n  difference = (difference - ms) / 1000\n  let s = difference % 60\n  difference = (difference - s) / 60\n  let m = difference % 60\n  difference = (difference - m) / 60\n  let h = difference\n\n  let ss = s <= 9 && s >= 0 ? `0${s}` : s\n  let mm = m <= 9 && m >= 0 ? `0${m}` : m\n  let hh = h <= 9 && h >= 0 ? `0${h}` : h\n\n  return hh + 'h' + ':' + mm + 'min' + ':' + ss + 's'\n}\n\nconst WorkoutForm = () => {\n  const addWorkout = async (values) => {\n    console.log(values)\n    const workoutPost = {\n      workoutName:\n        values.workoutName.toLowerCase().charAt(0).toUpperCase() +\n        values.workoutName.toLowerCase().slice(1),\n      workoutType: values.workoutType,\n      duration: values.duration,\n      description: values.description,\n      likes: values.likes,\n    }\n    try {\n      await create(workoutPost)\n    } catch (e) {\n      //catch error here\n    }\n  }\n  return (\n    <FormWrapper>\n      <Formik\n        initialValues={{\n          workoutName: '',\n          workoutType: 'Running',\n          startTime: '',\n          endTime: '',\n          description: '',\n          duration: '',\n          likes: 0,\n        }}\n        onSubmit={(values, { setSubmitting, resetForm }) => {\n          values.likes = 0\n          console.log('submitting', values)\n          let startTime = new Date(values.endTime).getTime()\n          let endTime = new Date(values.startTime).getTime()\n          values.duration = workoutTimeToString(endTime, startTime)\n          addWorkout(values)\n          resetForm()\n          setSubmitting(false)\n        }}\n        validationSchema={validationSchema}\n      >\n        {(props) => {\n          const { isSubmitting, handleSubmit } = props\n          return (\n            <CenteredForm onSubmit={handleSubmit}>\n              <MyTextField\n                label=\"Name your workout\"\n                name=\"workoutName\"\n                type=\"text\"\n              />\n              <MySelect\n                options={[\n                  {\n                    content: 'Running',\n                    id: 1,\n                  },\n                  {\n                    content: 'Gym',\n                    id: 2,\n                  },\n                  {\n                    content: 'Cycling',\n                    id: 3,\n                  },\n                ]}\n                label=\"Workout type\"\n                name=\"workoutType\"\n                type=\"select\"\n              />\n              <MyDateField\n                label=\"Start time\"\n                name=\"startTime\"\n                type=\"datetime-local\"\n              />\n              <MyDateField\n                label=\"End time\"\n                name=\"endTime\"\n                type=\"datetime-local\"\n              />\n              <MyBigTextField\n                label=\"Workout notes\"\n                name=\"description\"\n                type=\"text\"\n              />\n              <LoginButton disabled={isSubmitting} type=\"submit\">\n                Submit workout\n              </LoginButton>\n            </CenteredForm>\n          )\n        }}\n      </Formik>\n    </FormWrapper>\n  )\n}\n\nexport default WorkoutForm\n\n/*\n<MySelect\n                options={[\n                  {\n                    content: 'Motivated',\n                    id: 1,\n                  },\n                  {\n                    content: 'Delighted',\n                    id: 2,\n                  },\n                  {\n                    content: 'Sad',\n                    id: 3,\n                  },\n                  {\n                    content: 'Disappointed',\n                    id: 4,\n                  },\n                  {\n                    content: 'Hopeful',\n                    id: 5,\n                  },\n                  {\n                    content: 'Happy',\n                    id: 6,\n                  },\n                ]}\n                label=\"Workout mood\"\n                name=\"mood\"\n                type=\"select\"\n              />\n              */\n","/home/joonas/projects/MuscleBud/client/src/components/Alert.js",[],"/home/joonas/projects/MuscleBud/client/src/components/Workout.js",["101","102","103","104"],"import React from 'react'\nimport workoutService from '../services/workouts'\nimport { Formik, Form } from 'formik'\nimport Togglable from './Togglable'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faRunning,\n  faClock,\n  faComment,\n  faThumbsUp,\n  faTrashAlt,\n} from '@fortawesome/free-solid-svg-icons'\nimport {\n  WorkoutPost,\n  FlexWrapper,\n  CommentWrapper,\n  CommentBody,\n  CommentCount,\n  PostInfo,\n} from '../styling/wrappers'\nimport {\n  WorkoutHeader,\n  PostHeader,\n  SpacedText,\n  BlueButton,\n  CommentText,\n  CommentUser,\n  DateText,\n} from '../styling/mixins'\nimport { MyBigTextField } from '../styling/forms'\n\nconst Workout = ({ workout, user, handleLike }) => {\n  const comments = workout.comments.length === 1 ? 'comment' : 'comments'\n  const addComment = async (props) => {\n    await workoutService.comment(workout.id, props, user)\n  }\n  const removeWorkout = async () => {\n    await workoutService.remove(workout.id)\n  }\n  return (\n    <>\n      <WorkoutPost key={workout.id}>\n        <PostHeader>{workout.user.username}</PostHeader>\n        <DateText>{new Date(workout.date).toDateString()}</DateText>\n        <WorkoutHeader>{workout.name} </WorkoutHeader>\n        <p>{workout.description}</p>\n        <FlexWrapper>\n          <p>\n            {' '}\n            <FontAwesomeIcon style={{ marginRight: 5 }} icon={faRunning} />{' '}\n            {workout.type}\n          </p>\n          <SpacedText>\n            {' '}\n            <FontAwesomeIcon style={{ marginRight: 5 }} icon={faClock} />\n            Duration: {workout.duration}\n          </SpacedText>\n        </FlexWrapper>\n        <Togglable\n          icon={\n            <FontAwesomeIcon\n              style={{ marginRight: 5 }}\n              icon={faComment}\n              title=\"comment\"\n            />\n          }\n        >\n          <Formik\n            initialValues={{ comment: '' }}\n            onSubmit={(values, { setSubmitting, resetForm }) => {\n              addComment(values.comment)\n              resetForm()\n              setSubmitting(false)\n            }}\n          >\n            {(props) => {\n              const { isSubmitting, handleSubmit } = props\n              return (\n                <Form onSubmit={handleSubmit}>\n                  <MyBigTextField\n                    placeholder=\"Leave a comment...\"\n                    name=\"comment\"\n                  />\n                  <BlueButton disabled={isSubmitting} type=\"submit\">\n                    Comment\n                  </BlueButton>\n                </Form>\n              )\n            }}\n          </Formik>\n        </Togglable>\n        <PostInfo>\n          <p>{workout.likes} likes</p>\n          <SpacedText>\n            {workout.comments.length} {comments}\n          </SpacedText>\n        </PostInfo>\n        {workout.comments.map((c) => (\n          <CommentWrapper key={c.id}>\n            <CommentBody>\n              <CommentUser>\n                <b>{c.user.username}</b>\n              </CommentUser>\n              <CommentText key={c.id}>{c.content}</CommentText>\n            </CommentBody>\n          </CommentWrapper>\n        ))}\n        <BlueButton onClick={() => handleLike(workout.id)}>Like</BlueButton>\n      </WorkoutPost>\n    </>\n  )\n}\n/*\n<RemoveButton>\n          <FontAwesomeIcon icon={faTrashAlt} onClick={removeWorkout} />\n        </RemoveButton>\n        {new Date(c.date).toDateString()}\n        */\nexport default Workout\n","/home/joonas/projects/MuscleBud/client/src/styling/global.js",[],"/home/joonas/projects/MuscleBud/client/src/styling/wrappers.js",[],"/home/joonas/projects/MuscleBud/client/src/styling/mixins.js",[],"/home/joonas/projects/MuscleBud/client/src/styling/forms.js",[],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":12,"column":10,"nodeType":"111","messageId":"112","endLine":12,"endColumn":27},{"ruleId":"113","severity":1,"message":"114","line":9,"column":1,"nodeType":"115","endLine":9,"endColumn":28},{"ruleId":"116","severity":1,"message":"117","line":38,"column":19,"nodeType":"118","messageId":"119","endLine":38,"endColumn":20},{"ruleId":"116","severity":1,"message":"117","line":38,"column":38,"nodeType":"118","messageId":"119","endLine":38,"endColumn":39},{"ruleId":"109","severity":1,"message":"120","line":10,"column":3,"nodeType":"111","messageId":"112","endLine":10,"endColumn":13},{"ruleId":"109","severity":1,"message":"121","line":11,"column":3,"nodeType":"111","messageId":"112","endLine":11,"endColumn":13},{"ruleId":"109","severity":1,"message":"122","line":18,"column":3,"nodeType":"111","messageId":"112","endLine":18,"endColumn":15},{"ruleId":"109","severity":1,"message":"123","line":37,"column":9,"nodeType":"111","messageId":"112","endLine":37,"endColumn":22},"no-native-reassign",["124"],"no-negated-in-lhs",["125"],"no-unused-vars","'CenteredContainer' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'faThumbsUp' is defined but never used.","'faTrashAlt' is defined but never used.","'CommentCount' is defined but never used.","'removeWorkout' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]